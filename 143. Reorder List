/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
        if(!head || !head->next) return;
        
        ListNode *slow = head, *fast = head;
        while(fast->next && fast->next->next){
            slow = slow->next;
            fast = fast->next->next;
        }
        ListNode *secondHalf = slow->next;
        slow->next = nullptr;

        ListNode *prevNode = nullptr, *next, *curr = secondHalf;

        while(curr){
            next = curr->next;
            curr->next = prevNode;
            prevNode = curr;
            curr = next;
        }

        ListNode* firstHalf = head;
        while(prevNode){
            ListNode *nextFirst = firstHalf->next;
            ListNode *nextSecond = prevNode->next;

            firstHalf->next = prevNode;
            prevNode->next = nextFirst;

            firstHalf = nextFirst;
            prevNode = nextSecond;
        }



    }
};
